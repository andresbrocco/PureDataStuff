#N canvas 0 446 1366 685 10;
#X declare -lib ofelia;
#X obj 382 29 declare -lib ofelia;
#X obj 383 55 OSCFromAppsToMidi;
#X obj 630 183 r similarityMatrix;
#X obj 78 32 loadbang;
#X obj 78 74 ofWindow;
#X obj 28 169 ofSetup;
#X obj 28 191 ofBackground 102;
#X obj 28 213 ofFill;
#X obj 615 159 ofDraw;
#X obj 140 214 ofSetFrameRate;
#X msg 140 191 10;
#X obj 615 228 mtx_* 128;
#X obj 615 205 mtx;
#X msg 23 53 destroy;
#X obj 28 255 ofelia define -k \$0-myFunctions;
#A __set function M.matrix(l) \; local m = l[1] \; local n = l[2] \;
local cellSizeX = ofGetWidth()/(m + 2) \; local cellSizeY = ofGetHeight()/(n
+ 2) \; for i = 0 \, n - 1 \, 1 do \; for j = 0 \, i \, 1 do \; ofSetColor(l[50*i+j+3])
\; ofDrawRectangle((i+1)*cellSizeX \, (j+1)*cellSizeY \, 0 \, cellSizeX
\, cellSizeY) \; ofDrawRectangle((j+1)*cellSizeX \, (i+1)*cellSizeY
\, 0 \, cellSizeX \, cellSizeY) \; end \; end \; return \; end \;;
#X obj 36 235 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 28 281 ofelia define -k \$0-myFunctions;
#A __set function M.matrix(l) \; local m = l[1] \; local n = l[2] \;
local cellSizeX = ofGetWidth()/(m + 2) \; local cellSizeY = ofGetHeight()/(n
+ 2) \; for i = 0 \, n - 1 \, 1 do \; for j = 0 \, m - 1 \, 1 do \;
ofSetColor(l[50*i+j+3]) \; ofDrawRectangle((i+1)*cellSizeX \, (j+1)*cellSizeY
\, 0 \, cellSizeX \, cellSizeY) \; end \; end \; return \; end \;;
#X text 226 281 <- generic for any matrix (slower);
#X msg 78 53 setPosition 30 100 \, setSize 600 600 \, create;
#X obj 615 252 ofelia define \; function M.matrix(l) \; require("\$0-myFunctions").matrix(l)
\; return \; end \;;
#X text 226 254 <- specifically for simmetric matrixes (25% faster)
;
#X connect 2 0 12 1;
#X connect 3 0 18 0;
#X connect 5 0 6 0;
#X connect 5 0 10 0;
#X connect 6 0 7 0;
#X connect 7 0 14 0;
#X connect 8 0 12 0;
#X connect 10 0 9 0;
#X connect 11 0 19 0;
#X connect 12 0 11 0;
#X connect 13 0 4 0;
#X connect 15 0 14 0;
#X connect 18 0 4 0;
